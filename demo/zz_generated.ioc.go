//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli, run 'iocli gen' to re-generate

package main

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	singleton "github.com/alibaba/ioc-golang/autowire/singleton"
	util "github.com/alibaba/ioc-golang/autowire/util"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &userServiceImpl_{}
		},
	})
	userServiceImplStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &UserServiceImpl{}
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(userServiceImplStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &daoServiceImpl_{}
		},
	})
	daoServiceImplStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &DaoServiceImpl{}
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(daoServiceImplStructDescriptor)
}

type userServiceImpl_ struct {
}

type daoServiceImpl_ struct {
}

type UserServiceImplIOCInterface interface {
}

type DaoServiceImplIOCInterface interface {
}

var _userServiceImplSDID string

func GetUserServiceImplSingleton() (*UserServiceImpl, error) {
	if _userServiceImplSDID == "" {
		_userServiceImplSDID = util.GetSDIDByStructPtr(new(UserServiceImpl))
	}
	i, err := singleton.GetImpl(_userServiceImplSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*UserServiceImpl)
	return impl, nil
}

func GetUserServiceImplIOCInterfaceSingleton() (UserServiceImplIOCInterface, error) {
	if _userServiceImplSDID == "" {
		_userServiceImplSDID = util.GetSDIDByStructPtr(new(UserServiceImpl))
	}
	i, err := singleton.GetImplWithProxy(_userServiceImplSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(UserServiceImplIOCInterface)
	return impl, nil
}

var _daoServiceImplSDID string

func GetDaoServiceImplSingleton() (*DaoServiceImpl, error) {
	if _daoServiceImplSDID == "" {
		_daoServiceImplSDID = util.GetSDIDByStructPtr(new(DaoServiceImpl))
	}
	i, err := singleton.GetImpl(_daoServiceImplSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*DaoServiceImpl)
	return impl, nil
}

func GetDaoServiceImplIOCInterfaceSingleton() (DaoServiceImplIOCInterface, error) {
	if _daoServiceImplSDID == "" {
		_daoServiceImplSDID = util.GetSDIDByStructPtr(new(DaoServiceImpl))
	}
	i, err := singleton.GetImplWithProxy(_daoServiceImplSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(DaoServiceImplIOCInterface)
	return impl, nil
}
